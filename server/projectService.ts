import JSZip from 'jszip';
import { FileStructure, ProjectStructure } from './aiService';

export class ProjectService {
  async generateZip(files: FileStructure[], projectName: string): Promise<Buffer> {
    const zip = new JSZip();
    
    const addFilesToZip = (files: FileStructure[], currentPath = '') => {
      files.forEach(file => {
        const filePath = currentPath ? `${currentPath}/${file.name}` : file.name;
        
        if (file.type === 'folder' && file.children) {
          addFilesToZip(file.children, filePath);
        } else if (file.type === 'file' && file.content) {
          zip.file(filePath, file.content);
        }
      });
    };
    
    addFilesToZip(files);
    
    // Add README
    zip.file('README.md', `# ${projectName}

Generated by PEAKS AI

## Getting Started

1. Install dependencies (if applicable)
2. Run the development server
3. Start building!

Built with ❤️ using PEAKS AI
`);
    
    return await zip.generateAsync({ type: 'nodebuffer' });
  }

  generatePreviewHtml(files: FileStructure[], projectType: string): string {
    // Find the main HTML file or create a preview
    const findFile = (files: FileStructure[], name: string): FileStructure | null => {
      for (const file of files) {
        if (file.name === name && file.type === 'file') return file;
        if (file.type === 'folder' && file.children) {
          const found = findFile(file.children, name);
          if (found) return found;
        }
      }
      return null;
    };

    const htmlFile = findFile(files, 'index.html');
    if (htmlFile?.content) {
      return htmlFile.content;
    }

    // Generate preview based on project type
    if (projectType === 'React App') {
      return this.generateReactPreview(files);
    }

    return this.generateGenericPreview(files, projectType);
  }

  private generateReactPreview(files: FileStructure[]): string {
    return `<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>React App Preview</title>
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
      margin: 0;
      padding: 2rem;
      background: #f5f5f5;
    }
    .preview-container {
      max-width: 800px;
      margin: 0 auto;
      background: white;
      padding: 2rem;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    .react-logo {
      width: 60px;
      height: 60px;
      margin: 0 auto 1rem;
      display: flex;
      align-items: center;
      justify-content: center;
      background: #61dafb;
      border-radius: 50%;
      color: #20232a;
      font-size: 24px;
    }
  </style>
</head>
<body>
  <div class="preview-container">
    <div class="react-logo">⚛️</div>
    <h1>React Application</h1>
    <p>Your React app is ready to run!</p>
    <p><strong>Next steps:</strong></p>
    <ol>
      <li>Install dependencies: <code>npm install</code></li>
      <li>Start development server: <code>npm run dev</code></li>
      <li>Open in browser and start coding!</li>
    </ol>
  </div>
</body>
</html>`;
  }

  private generateGenericPreview(files: FileStructure[], projectType: string): string {
    return `<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${projectType} Preview</title>
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
      margin: 0;
      padding: 2rem;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .preview-container {
      text-align: center;
      max-width: 600px;
    }
    h1 {
      font-size: 3rem;
      margin-bottom: 1rem;
    }
    p {
      font-size: 1.2rem;
      opacity: 0.9;
    }
  </style>
</head>
<body>
  <div class="preview-container">
    <h1>${projectType}</h1>
    <p>Your ${projectType.toLowerCase()} is ready!</p>
    <p>Built with PEAKS AI ⚡</p>
  </div>
</body>
</html>`;
  }
}

export const projectService = new ProjectService();
